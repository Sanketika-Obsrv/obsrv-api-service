openapi: 3.0.0
info:
  title: Obsrv API Service
  description: >-
    Obsrv is a set of APIs that provide access to a variety of data sources and
    datasets. These APIs can be used to analyze different types of events, as
    well as to manage data sources and datasets.
  version: 1.0.0
servers:
  - url: "<Your-Host-IP>:3000"
tags:
  - name: Dataset CRUD APIs
    description: >-
      The Dataset APIs facilitate efficient management of datasets by enabling
      users to create, read, and update dataset records, along with the
      capability to list multiple records based on specific criteria.
  - name: Data Ingest
  - name: Data query
paths:
  /v1/datasets/create:
    post:
      tags:
        - Dataset CRUD APIs
      summary: Dataset create
      description: >-
        This API allows you to create new datasets used by the analytical data
        source.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                id: api.datasets.create
                ver: v1
                ts: '2024-04-10T16:10:50+05:30'
                params:
                  msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                request:
                  dataset_id: sb-telemetry
                  type: dataset
                  name: sb-telemetry
                  validation_config:
                    validate: true
                    mode: Strict
                  extraction_config:
                    is_batch_event: true
                    extraction_key: events
                    dedup_config:
                      drop_duplicates: true
                      dedup_key: id
                  dedup_config:
                    drop_duplicates: true
                    dedup_key: mid
                  data_schema:
                    $schema: https://json-schema.org/draft/2020-12/schema
                    type: object
                    properties:
                      eid:
                        type: string
                      ver:
                        type: string
                      required:
                        - eid
                    additionalProperties: true
                  denorm_config:
                    denorm_fields:
                      - denorm_key: actor.id
                        denorm_out_field: userdata
                      - denorm_key: actor.id
                        denorm_out_field: mid
                  dataset_config:
                    data_key: mid
                    timestamp_key: ets
                  tags:
                    - tag1
                    - tag2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Dataset Success
                  value:
                    id: api.datasets.create
                    ver: v1
                    ts: '2024-04-16T17:56:06+05:30'
                    params:
                      status: SUCCESS
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 78hj80j9-d61e-4d4f-be78-181834eeff6d
                    responseCode: OK
                    result:
                      id: sb-telemetry.1
                      version_key: '1713442037275'
                example-1:
                  summary: Master Dataset Success
                  value:
                    id: api.datasets.create
                    ver: v1
                    ts: '2024-04-16T17:56:06+05:30'
                    params:
                      status: SUCCESS
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 78hj80j9-d61e-4d4f-be78-181834eeff6d
                    responseCode: OK
                    result:
                      id: sb-telemetry-master.1
                      version_key: '1713442037275'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: 'Failure: Dataset contains duplicate denorm out field'
                  value:
                    id: api.datasets.create
                    ver: v1
                    ts: '2024-04-16T17:59:06+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 54c5b692-dc37-432e-b556-7f396d7c9e07
                    responseCode: BAD_REQUEST
                    result: {}
                    error:
                      code: DUPLICATE_DENORM_KEY_FOUND
                      message: Duplicate denorm key found
                      trace: ''
                example-1:
                  summary: 'Failure: Invalid request payload provided'
                  value:
                    id: api.datasets.create
                    ver: v1
                    ts: '2024-04-16T18:00:34+05:30'
                    params:
                      status: FAILED
                      resmsgid: 615c1e4c-8c19-44fd-b29c-c235e7cbb5f0
                    responseCode: BAD_REQUEST
                    result: {}
                    error:
                      code: SCHEMA_VALIDATION_FAILED
                      message: >-
                        #additionalProperties should NOT have additional
                        properties
                      trace: ''
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
              example:
                id: api.datasets.create
                ver: v1
                ts: '2024-04-16T17:56:06+05:30'
                params:
                  status: FAILED
                  msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                  resmsgid: 76612ad1-241b-4ce3-8af4-88db860697f4
                responseCode: CONFLICT
                result: {}
                error:
                  code: DATASET_EXISTS
                  message: Dataset already exists
                  trace: ''
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              example:
                id: api.datasets.create
                ver: v1
                ts: '2024-04-16T18:02:44+05:30'
                params:
                  status: FAILED
                  msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                  resmsgid: dd1c0e11-fb4c-484c-81fe-82c9e2eee053
                responseCode: INTERNAL_SERVER_ERROR
                result: {}
                error:
                  code: DATASET_CREATION_FAILURE
                  message: Failed to create dataset
                  trace: ''
  /v1/datasets/update:
    patch:
      tags:
        - Dataset CRUD APIs
      summary: Dataset update
      description: >-
        This API allows you to update existing datasets, add or remove denorm
        fields used by the analytical data source. User can even add, remove or update transformations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                id: api.datasets.update
                ver: v1
                ts: '2024-04-10T16:10:50+05:30'
                params:
                  msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                request:
                  dataset_id: sb-telemetry.1
                  version_key: '1713465933736'
                  name: sb-telemetry
                  validation_config:
                    validate: true
                    mode: Strict
                  extraction_config:
                    is_batch_event: true
                    extraction_key: events
                    dedup_config:
                      drop_duplicates: true
                      dedup_key: id
                  dedup_config:
                    drop_duplicates: true
                    dedup_key: mid
                  data_schema:
                    $schema: https://json-schema.org/draft/2020-12/schema
                    type: object
                    properties:
                      eid:
                        type: string
                      ver:
                        type: string
                      required:
                        - eid
                    additionalProperties: true
                  denorm_config:
                    denorm_fields:
                      - values:
                          denorm_key: actor.id
                          denorm_out_field: userdata
                        action: remove
                      - values:
                          denorm_key: actor.id
                          denorm_out_field: edata
                        action: add
                  transformation_config:
                    - values:
                        field_key: eid
                        transformation_function:
                          type: mask
                          expr: eid
                          condition: null
                        mode: Strict
                        metadata:
                          _transformationType: mask
                          _transformedFieldDataType: string
                          _transformedFieldSchemaType: string
                          section: transformation
                      action: add
                  dataset_config:
                    data_key: mid
                    timestamp_key: ets
                  tags:
                    - values:
                        - tag1
                        - tag2
                      action: remove
                    - values:
                        - tag3
                        - tag4
                      action: add
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                id: api.datasets.update
                ver: v1
                ts: '2024-04-19T00:16:13+05:30'
                params:
                  status: SUCCESS
                  msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                  resmsgid: 4b2c0c22-f765-46f9-80af-33d0442db5ca
                responseCode: OK
                result:
                  message: Dataset is updated successfully
                  id: sb-telemetry.1
                  version_key: '1713465973004'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: 'Failure: Invalid payload provided'
                  value:
                    id: api.datasets.update
                    ver: v1
                    ts: '2024-04-19T12:22:12+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 9408e137-ada8-48b8-99e9-90d5cdd35e35
                    responseCode: BAD_REQUEST
                    result: {}
                    error:
                      code: DATASET_UPDATE_INPUT_INVALID
                      message: >-
                        #properties/request/properties/name/type should be
                        string
                      trace: ''
                example-1:
                  summary: 'Failure: No field provided along with dataset_id'
                  value:
                    id: api.datasets.update
                    ver: v1
                    ts: '2024-04-19T12:23:06+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 347f465f-f100-4095-9801-38c4943380c0
                    responseCode: BAD_REQUEST
                    result: {}
                    error:
                      code: DATASET_UPDATE_NO_FIELDS
                      message: >-
                        Provide atleast one field in addition to the dataset_id
                        to update the dataset
                      trace: ''
                example-2:
                  summary: 'Failure: Cannot update as dataset not in draft state'
                  value:
                    id: api.datasets.update
                    ver: v1
                    ts: '2024-04-19T12:25:57+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: a9dfc926-c893-4ec3-82b8-bc8601d928a9
                    responseCode: BAD_REQUEST
                    result: {}
                    error:
                      code: DATASET_NOT_IN_DRAFT_STATE_TO_UPDATE
                      message: Dataset cannot be updated as it is not in draft state
                      trace: ''
                example-3:
                  summary: 'Failure:  Dataset contains duplicate denorm out field'
                  value:
                    id: api.datasets.update
                    ver: v1
                    ts: '2024-04-19T12:29:25+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 865b9bef-9b6d-467c-9065-6689126b0f42
                    responseCode: BAD_REQUEST
                    result: {}
                    error:
                      code: DATASET_DUPLICATE_DENORM_KEY
                      message: Dataset contains duplicate denorm out keys:[userdata]
                      trace: ''
                example-4:
                  summary: 'Failure: Dataset tags to add already exists'
                  value:
                    id: api.datasets.update
                    ver: v1
                    ts: '2024-04-19T12:32:05+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 9e9ff0bc-d660-4c4e-a2b0-cb11246a6961
                    responseCode: BAD_REQUEST
                    result: {}
                    error:
                      code: DATASET_TAGS_EXISTS
                      message: Dataset tags already exist
                      trace: ''
                example-5:
                  summary: 'Failure: Dataset transformations to add already exists'
                  value:
                    id: api.datasets.update
                    ver: v1
                    ts: '2024-04-19T12:34:46+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: e0a5cc26-032e-4be8-81ef-c7e76867c9c1
                    responseCode: BAD_REQUEST
                    result: {}
                    error:
                      code: DATASET_TRANSFORMATIONS_EXIST
                      message: Dataset transformations already exists
                      trace: ''
                example-6:
                  summary: 'Failure: Dataset denorm fields to add already exists'
                  value:
                    id: api.datasets.update
                    ver: v1
                    ts: '2024-04-19T12:38:57+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 0b807580-a2b5-4a44-adc4-80b35b4b6529
                    responseCode: BAD_REQUEST
                    result: {}
                    error:
                      code: DATASET_DENORM_EXISTS
                      message: Denorm fields already exist
                      trace: ''
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: 'Failure: Dataset does not exists to update'
                  value:
                    id: api.datasets.update
                    ver: v1
                    ts: '2024-04-19T12:20:39+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: ebcf0a62-7c95-40f5-adf2-87ab90a40a80
                    responseCode: NOT_FOUND
                    result: {}
                    error:
                      code: DATASET_NOT_EXISTS
                      message: Dataset does not exists to update
                      trace: ''
                example-1:
                  summary: 'Failure: Dataset tags to remove do not exist'
                  value:
                    id: api.datasets.update
                    ver: v1
                    ts: '2024-04-19T12:33:33+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: c29e7d0f-3eaf-4972-8804-c172db7b6f13
                    responseCode: NOT_FOUND
                    result: {}
                    error:
                      code: DATASET_TAGS_DO_NOT_EXIST
                      message: Dataset tags do not exist to remove
                      trace: ''
                example-2:
                  summary: 'Failure: Dataset transformations to update do not exists'
                  value:
                    id: api.datasets.update
                    ver: v1
                    ts: '2024-04-19T12:36:04+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 0b5f515b-1958-4597-b603-b4038d4e5846
                    responseCode: NOT_FOUND
                    result: {}
                    error:
                      code: DATASET_TRANSFORMATIONS_DO_NOT_EXIST
                      message: Dataset transformations do not exist to update
                      trace: ''
                example-3:
                  summary: 'Failure: Dataset transformations to remove do not exist'
                  value:
                    id: api.datasets.update
                    ver: v1
                    ts: '2024-04-19T12:37:20+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 69d32411-4252-4b7f-8afa-6d436928c3d3
                    responseCode: NOT_FOUND
                    result: {}
                    error:
                      code: DATASET_TRANSFORMATIONS_DO_NOT_EXIST
                      message: Dataset transformations do not exist to remove
                      trace: ''
                example-4:
                  summary: 'Failure: Dataset denorm to remove does not exist'
                  value:
                    id: api.datasets.update
                    ver: v1
                    ts: '2024-04-19T12:40:07+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: ce78e393-2b74-46da-a70b-2abd06ad3270
                    responseCode: NOT_FOUND
                    result: {}
                    error:
                      code: DATASET_DENORM_DO_NOT_EXIST
                      message: Denorm fields do not exist to remove
                      trace: ''
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              example:
                id: api.datasets.update
                ver: v1
                ts: '2024-04-19T12:41:33+05:30'
                params:
                  status: FAILED
                  msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                  resmsgid: 451daa85-9cb8-459a-b681-a256c6e912f0
                responseCode: INTERNAL_SERVER_ERROR
                result: {}
                error:
                  code: DATASET_UPDATE_FAILURE
                  message: Failed to update dataset
                  trace: ''
  /v1/datasets/read/{dataset_id}:
    get:
      tags:
        - Dataset CRUD APIs
      summary: Dataset read
      description: >-
        This API allows you to read dataset from the requested dataset_id.
        User can request for the specific fields and status of the dataset through the request params.
        By default, the API returns the dataset of status "Live".
        <br>
        <br>
        Valid fields that user can request are "dataset_id,id,name,type,validation_config,extraction_config,dedup_config,data_schema,router_config,denorm_config,transformation_config,dataset_config,tags,status,version,created_by,updated_by,created_date,updated_date,published_date"
      parameters:
        - name: dataset_id
          example: sb_telemetry.1
          in: path
          required: true
          schema:
            type: string
        - name: status
          example: Draft
          in: query
          required: false 
          schema:
            type: string
        - name: fields
          example: name
          in: query
          required: false 
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Read Draft dataset
                  value:
                    id: api.datasets.read
                    ver: v1
                    ts: '2024-04-19T12:43:58+05:30'
                    params:
                      status: SUCCESS
                      resmsgid: d02c643a-d51d-4c67-8a42-9f43e61f459e
                    responseCode: OK
                    result:
                      id: sb-telemetry.1
                      dataset_id: sb-telemetry
                      name: sb-telemetry
                      type: dataset
                      extraction_config:
                        is_batch_event: true
                        extraction_key: events
                        dedup_config:
                          drop_duplicates: true
                          dedup_key: id
                          dedup_period: 604800
                      validation_config:
                        validate: true
                        mode: Strict
                      dedup_config:
                        drop_duplicates: true
                        dedup_key: mid
                        dedup_period: 604800
                      data_schema:
                        $schema: https://json-schema.org/draft/2020-12/schema
                        type: object
                        properties:
                          eid:
                            type: string
                          ver:
                            type: string
                          required:
                            - eid
                        additionalProperties: true
                      denorm_config:
                        redis_db_host: localhost
                        redis_db_port: 6379
                        denorm_fields:
                          - denorm_key: actor.id
                            denorm_out_field: userdata
                          - denorm_key: actor.id
                            denorm_out_field: mid
                          - denorm_key: actor.id
                            denorm_out_field: edata
                      router_config:
                        topic: ''
                      dataset_config:
                        data_key: mid
                        timestamp_key: ets
                        entry_topic: local.ingest
                        redis_db_host: localhost
                        redis_db_port: 6379
                        index_data: true
                        redis_db: 0
                      tags:
                        - tag3
                        - tag4
                      status: Draft
                      version: 1
                      created_by: SYSTEM
                      updated_by: SYSTEM
                      published_date: null
                      client_state: {}
                      version_key: '1713510527662'
                      created_date: '2024-04-18T23:45:00.389Z'
                      updated_date: '2024-04-19T01:38:47.670Z'
                      transformations_config:
                        - field_key: eid
                          transformation_function: {}
                          mode: Strict
                          metadata: {}
                example-1:
                  summary: Read Live dataset
                  value:
                    id: api.datasets.read
                    ver: v1
                    ts: '2024-04-19T12:44:54+05:30'
                    params:
                      status: SUCCESS
                      resmsgid: 3d0efbc5-dea8-4815-a749-b9f9ae16ccfe
                    responseCode: OK
                    result:
                      id: telemetry01
                      dataset_id: telemetry01
                      type: dataset
                      name: telemetry01
                      validation_config:
                        validate: true
                        mode: Strict
                        validation_mode: Strict
                      extraction_config:
                        is_batch_event: false
                        extraction_key: ''
                        dedup_config:
                          drop_duplicates: false
                          dedup_key: id
                          dedup_period: 604800
                      data_schema:
                        $schema: https://json-schema.org/draft/2020-12/schema
                        type: object
                        properties:
                          skill:
                            type: string
                            arrival_format: text
                            data_type: string
                          name:
                            type: string
                            arrival_format: text
                            data_type: string
                          skill_id:
                            type: string
                            arrival_format: text
                            data_type: string
                          Skill_id:
                            type: string
                            arrival_format: text
                            data_type: string
                        additionalProperties: false
                      denorm_config:
                        redis_db_host: localhost
                        redis_db_port: 6379
                        denorm_fields: []
                      router_config:
                        topic: telemetry01
                      dataset_config:
                        data_key: ''
                        timestamp_key: obsrv_meta.syncts
                        exclude_fields: []
                        entry_topic: local.ingest
                        redis_db_host: localhost
                        redis_db_port: 6379
                        index_data: true
                        redis_db: 0
                      tags: []
                      status: Live
                      created_by: SYSTEM
                      updated_by: SYSTEM
                      created_date: '2024-04-11T06:27:37.557Z'
                      updated_date: '2024-04-11T06:27:37.557Z'
                      transformations_config:
                        - field_key: mid
                          transformation_function:
                            type: mask
                            expr: mid
                            condition: null
                          mode: Strict
                          metadata:
                            _transformationType: mask
                            _transformedFieldDataType: string
                            _transformedFieldSchemaType: string
                            section: transformation
                      version: 1
                example-2:
                  summary: Read specific fields from the dataset
                  value:
                    id: api.datasets.read
                    ver: v1
                    ts: '2024-04-19T12:45:44+05:30'
                    params:
                      status: SUCCESS
                      resmsgid: da752dfe-0d88-4dd6-a6a8-d858f5960f7e
                    responseCode: OK
                    result:
                      name: sb-telemetry
                      type: dataset
                      id: sb-telemetry.1
                example-3:
                  summary: Read version_key from the dataset
                  value:
                    id: api.datasets.read
                    ver: v1
                    ts: '2024-04-19T12:47:48+05:30'
                    params:
                      status: SUCCESS
                      resmsgid: a3ad1e17-671f-4294-a834-2ee3f255c9b3
                    responseCode: OK
                    result:
                      version_key: '1713510527662'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
              example:
                id: api.datasets.read
                ver: v1
                ts: '2024-04-19T12:46:03+05:30'
                params:
                  status: FAILED
                  resmsgid: 302fec39-5070-4464-b02f-56b1d0418147
                responseCode: BAD_REQUEST
                result: {}
                error:
                  code: DATASET_INVALID_FIELDS
                  message: >-
                    The specified fields [newname] in the dataset cannot be
                    found.
                  trace: ''
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
              example:
                id: api.datasets.read
                ver: v1
                ts: '2024-04-19T12:46:14+05:30'
                params:
                  status: FAILED
                  resmsgid: cd71f8c7-6aa9-4b3a-9825-b2caab67fe8c
                responseCode: NOT_FOUND
                result: {}
                error:
                  code: DATASET_NOT_FOUND
                  message: Dataset with the given dataset_id not found
                  trace: ''
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              example:
                id: api.datasets.read
                ver: v1
                ts: '2024-04-19T12:46:34+05:30'
                params:
                  status: FAILED
                  resmsgid: 29d82020-101d-4506-8fb8-6f3603057064
                responseCode: INTERNAL_SERVER_ERROR
                result: {}
                error:
                  code: DATASET_READ_FAILURE
                  message: Failed to read dataset
                  trace: ''
  /v1/datasets/list:
    post:
      tags:
        - Dataset CRUD APIs
      summary: Dataset List
      description: >-
        This API allows you to list all datasets. User can apply filters on
        dataset status and type, sort the datasets as per requested order.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                id: api.datasets.list
                ver: v1
                ts: '2024-04-10T16:10:50+05:30'
                params:
                  msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                request:
                  filters:
                    type: master-dataset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Dataset list success when no filters provided
                  value:
                    id: api.datasets.list
                    ver: v1
                    ts: '2024-04-19T12:54:56+05:30'
                    params:
                      status: SUCCESS
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: e7a2c5c1-5aa9-4422-81a5-6f197d3b689e
                    responseCode: OK
                    result:
                      data:
                        - id: telemetry01
                          dataset_id: telemetry01
                          type: dataset
                          name: telemetry01
                          validation_config:
                            validate: true
                            mode: Strict
                            validation_mode: Strict
                          extraction_config:
                            is_batch_event: false
                            extraction_key: ''
                            dedup_config:
                              drop_duplicates: false
                              dedup_key: id
                              dedup_period: 604800
                          data_schema:
                            $schema: https://json-schema.org/draft/2020-12/schema
                            type: object
                            properties:
                              skill:
                                type: string
                                arrival_format: text
                                data_type: string
                              name:
                                type: string
                                arrival_format: text
                                data_type: string
                              skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                              Skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                            additionalProperties: false
                          denorm_config:
                            redis_db_host: localhost
                            redis_db_port: 6379
                            denorm_fields: []
                          router_config:
                            topic: telemetry01
                          dataset_config:
                            data_key: ''
                            timestamp_key: obsrv_meta.syncts
                            exclude_fields: []
                            entry_topic: local.ingest
                            redis_db_host: localhost
                            redis_db_port: 6379
                            index_data: true
                            redis_db: 0
                          tags: []
                          status: Live
                          created_by: SYSTEM
                          updated_by: SYSTEM
                          created_date: '2024-04-11T06:27:37.557Z'
                          updated_date: '2024-04-11T06:27:37.557Z'
                          version: 1
                          transformations_config:
                            - field_key: mid
                              transformation_function:
                                type: mask
                                expr: mid
                                condition: null
                              mode: Strict
                              metadata:
                                _transformationType: mask
                                _transformedFieldDataType: string
                                _transformedFieldSchemaType: string
                                section: transformation
                        - id: master-telemetrry
                          dataset_id: master-telemetrry
                          type: master-dataset
                          name: master-telemetrry
                          validation_config:
                            validate: true
                            mode: Strict
                          extraction_config:
                            is_batch_event: false
                            extraction_key: ''
                            dedup_config:
                              drop_duplicates: false
                              dedup_key: ''
                              dedup_period: 604800
                          data_schema:
                            $schema: https://json-schema.org/draft/2020-12/schema
                            type: object
                            properties:
                              skill:
                                type: string
                                arrival_format: text
                                data_type: string
                              name:
                                type: string
                                arrival_format: text
                                data_type: string
                              skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                              Skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                            additionalProperties: true
                          denorm_config:
                            redis_db_host: localhost
                            redis_db_port: 6379
                            denorm_fields: []
                          router_config:
                            topic: master-telemetrry
                          dataset_config:
                            data_key: skill
                            timestamp_key: ''
                            exclude_fields: []
                            entry_topic: local.masterdata.ingest
                            redis_db_host: localhost
                            redis_db_port: 6379
                            index_data: true
                            redis_db: 4
                          tags: []
                          status: Live
                          created_by: SYSTEM
                          updated_by: SYSTEM
                          created_date: '2024-04-11T09:16:36.904Z'
                          updated_date: '2024-04-11T09:16:36.904Z'
                          version: 1
                        - id: master-telemetrry.1
                          dataset_id: master-telemetrry
                          name: master-telemetrry
                          type: master-dataset
                          extraction_config:
                            is_batch_event: false
                            extraction_key: ''
                            dedup_config:
                              drop_duplicates: false
                              dedup_key: ''
                              dedup_period: 604800
                          validation_config:
                            validate: true
                            mode: Strict
                          dedup_config:
                            drop_duplicates: false
                            dedup_key: ''
                            dedup_period: 604800
                          data_schema:
                            $schema: https://json-schema.org/draft/2020-12/schema
                            type: object
                            properties:
                              skill:
                                type: string
                                arrival_format: text
                                data_type: string
                              name:
                                type: string
                                arrival_format: text
                                data_type: string
                              skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                            additionalProperties: true
                          denorm_config:
                            redis_db_host: localhost
                            redis_db_port: 6379
                            denorm_fields: []
                          router_config:
                            topic: master-telemetrry
                          dataset_config:
                            data_key: skill
                            timestamp_key: ''
                            exclude_fields: []
                            entry_topic: local.masterdata.ingest
                            redis_db_host: localhost
                            redis_db_port: 6379
                            index_data: true
                            redis_db: 4
                          tags: []
                          status: Publish
                          version: 1
                          created_by: SYSTEM
                          updated_by: SYSTEM
                          published_date: '2024-04-11T03:46:36.938Z'
                          client_state:
                            metadata:
                              conflicts: {}
                              event:
                                mergedEvent:
                                  skill: new
                                  name: j
                                  skill_id: aabc
                                  Skill_id: bbc
                              activePage: 1
                            pages: {}
                          version_key: '1713509698978'
                          created_date: '2024-04-11T03:45:57.251Z'
                          updated_date: '2024-04-11T09:21:11.167Z'
                        - id: two.1
                          dataset_id: two
                          name: sb-telemetry
                          type: dataset
                          extraction_config:
                            is_batch_event: true
                            extraction_key: events
                            dedup_config:
                              drop_duplicates: true
                              dedup_key: id
                              dedup_period: 604800
                          validation_config:
                            validate: true
                            mode: Strict
                          dedup_config:
                            drop_duplicates: true
                            dedup_key: mid
                            dedup_period: 604800
                          data_schema:
                            $schema: https://json-schema.org/draft/2020-12/schema
                            type: object
                            properties:
                              eid:
                                type: string
                              ver:
                                type: string
                              required:
                                - eid
                            additionalProperties: true
                          denorm_config:
                            redis_db_host: localhost
                            redis_db_port: 6379
                            denorm_fields:
                              - denorm_key: actor.id
                                denorm_out_field: mid
                              - denorm_key: actor.id
                                denorm_out_field: edata
                          router_config:
                            topic: ''
                          dataset_config:
                            data_key: mid
                            timestamp_key: ets
                            entry_topic: local.ingest
                            redis_db_host: localhost
                            redis_db_port: 6379
                            index_data: true
                            redis_db: 0
                          tags:
                            - tag3
                            - tag4
                          status: Draft
                          version: 1
                          created_by: SYSTEM
                          updated_by: SYSTEM
                          published_date: null
                          client_state: {}
                          version_key: '1713509698978'
                          created_date: '2024-04-15T02:22:48.270Z'
                          updated_date: '2024-04-15T02:24:03.308Z'
                          transformations_config:
                            - field_key: eid
                              transformation_function:
                                type: mask
                                expr: eid
                                condition: null
                              mode: Strict
                              metadata:
                                _transformationType: mask
                                _transformedFieldDataType: string
                                _transformedFieldSchemaType: string
                                section: transformation
                            - field_key: cid
                              transformation_function:
                                type: mask
                                expr: eid
                                condition: null
                              mode: Strict
                              metadata:
                                _transformationType: mask
                                _transformedFieldDataType: string
                                _transformedFieldSchemaType: string
                                section: transformation
                        - id: telemetry01.1
                          dataset_id: telemetry01
                          name: telemetry01
                          type: dataset
                          extraction_config:
                            is_batch_event: false
                            extraction_key: ''
                            dedup_config:
                              drop_duplicates: false
                              dedup_key: id
                              dedup_period: 604800
                          validation_config:
                            validate: true
                            mode: Strict
                            validation_mode: Strict
                          dedup_config:
                            drop_duplicates: false
                            dedup_key: ''
                            dedup_period: 604800
                          data_schema:
                            $schema: https://json-schema.org/draft/2020-12/schema
                            type: object
                            properties:
                              skill:
                                type: string
                                arrival_format: text
                                data_type: string
                              name:
                                type: string
                                arrival_format: text
                                data_type: string
                              skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                            additionalProperties: false
                          denorm_config:
                            redis_db_host: localhost
                            redis_db_port: 6379
                            denorm_fields: []
                          router_config:
                            topic: telemetry01
                          dataset_config:
                            data_key: ''
                            timestamp_key: obsrv_meta.syncts
                            exclude_fields: []
                            entry_topic: local.ingest
                            redis_db_host: localhost
                            redis_db_port: 6379
                            index_data: true
                            redis_db: 0
                          tags: []
                          status: Publish
                          version: 1
                          created_by: SYSTEM
                          updated_by: SYSTEM
                          published_date: '2024-04-11T00:57:37.581Z'
                          client_state:
                            metadata:
                              conflicts: {}
                              event:
                                mergedEvent:
                                  skill: old
                                  name: j
                                  skill_id: abc
                                  Skill_id: bbc
                              activePage: 3
                            pages: {}
                          version_key: '1713509698978'
                          created_date: '2024-04-11T00:54:06.404Z'
                          updated_date: '2024-04-11T06:28:24.526Z'
                        - id: sb-telemetry.1
                          dataset_id: sb-telemetry
                          name: sb-telemetry
                          type: dataset
                          extraction_config:
                            is_batch_event: true
                            extraction_key: events
                            dedup_config:
                              drop_duplicates: true
                              dedup_key: id
                              dedup_period: 604800
                          validation_config:
                            validate: true
                            mode: Strict
                          dedup_config:
                            drop_duplicates: true
                            dedup_key: mid
                            dedup_period: 604800
                          data_schema:
                            $schema: https://json-schema.org/draft/2020-12/schema
                            type: object
                            properties:
                              eid:
                                type: string
                              ver:
                                type: string
                              required:
                                - eid
                            additionalProperties: true
                          denorm_config:
                            redis_db_host: localhost
                            redis_db_port: 6379
                            denorm_fields:
                              - denorm_key: actor.id
                                denorm_out_field: userdata
                              - denorm_key: actor.id
                                denorm_out_field: mid
                              - denorm_key: actor.id
                                denorm_out_field: edata
                          router_config:
                            topic: ''
                          dataset_config:
                            data_key: mid
                            timestamp_key: ets
                            entry_topic: local.ingest
                            redis_db_host: localhost
                            redis_db_port: 6379
                            index_data: true
                            redis_db: 0
                          tags:
                            - tag3
                            - tag4
                          status: Draft
                          version: 1
                          created_by: SYSTEM
                          updated_by: SYSTEM
                          published_date: null
                          client_state: {}
                          version_key: '1713510527662'
                          created_date: '2024-04-18T23:45:00.389Z'
                          updated_date: '2024-04-19T01:38:47.670Z'
                          transformations_config:
                            - field_key: eid
                              transformation_function: {}
                              mode: Strict
                              metadata: {}
                      count: 6
                example-1:
                  summary: Dataset list success when status filter provided as array
                  value:
                    id: api.datasets.list
                    ver: v1
                    ts: '2024-04-19T12:55:39+05:30'
                    params:
                      status: SUCCESS
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 836f853f-9ad8-4567-a9bb-74c5d3bba25d
                    responseCode: OK
                    result:
                      data:
                        - id: telemetry01
                          dataset_id: telemetry01
                          type: dataset
                          name: telemetry01
                          validation_config:
                            validate: true
                            mode: Strict
                            validation_mode: Strict
                          extraction_config:
                            is_batch_event: false
                            extraction_key: ''
                            dedup_config:
                              drop_duplicates: false
                              dedup_key: id
                              dedup_period: 604800
                          data_schema:
                            $schema: https://json-schema.org/draft/2020-12/schema
                            type: object
                            properties:
                              skill:
                                type: string
                                arrival_format: text
                                data_type: string
                              name:
                                type: string
                                arrival_format: text
                                data_type: string
                              skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                              Skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                            additionalProperties: false
                          denorm_config:
                            redis_db_host: localhost
                            redis_db_port: 6379
                            denorm_fields: []
                          router_config:
                            topic: telemetry01
                          dataset_config:
                            data_key: ''
                            timestamp_key: obsrv_meta.syncts
                            exclude_fields: []
                            entry_topic: local.ingest
                            redis_db_host: localhost
                            redis_db_port: 6379
                            index_data: true
                            redis_db: 0
                          tags: []
                          status: Live
                          created_by: SYSTEM
                          updated_by: SYSTEM
                          created_date: '2024-04-11T06:27:37.557Z'
                          updated_date: '2024-04-11T06:27:37.557Z'
                          version: 1
                          transformations_config:
                            - field_key: mid
                              transformation_function:
                                type: mask
                                expr: mid
                                condition: null
                              mode: Strict
                              metadata:
                                _transformationType: mask
                                _transformedFieldDataType: string
                                _transformedFieldSchemaType: string
                                section: transformation
                        - id: master-telemetrry
                          dataset_id: master-telemetrry
                          type: master-dataset
                          name: master-telemetrry
                          validation_config:
                            validate: true
                            mode: Strict
                          extraction_config:
                            is_batch_event: false
                            extraction_key: ''
                            dedup_config:
                              drop_duplicates: false
                              dedup_key: ''
                              dedup_period: 604800
                          data_schema:
                            $schema: https://json-schema.org/draft/2020-12/schema
                            type: object
                            properties:
                              skill:
                                type: string
                                arrival_format: text
                                data_type: string
                              name:
                                type: string
                                arrival_format: text
                                data_type: string
                              skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                              Skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                            additionalProperties: true
                          denorm_config:
                            redis_db_host: localhost
                            redis_db_port: 6379
                            denorm_fields: []
                          router_config:
                            topic: master-telemetrry
                          dataset_config:
                            data_key: skill
                            timestamp_key: ''
                            exclude_fields: []
                            entry_topic: local.masterdata.ingest
                            redis_db_host: localhost
                            redis_db_port: 6379
                            index_data: true
                            redis_db: 4
                          tags: []
                          status: Live
                          created_by: SYSTEM
                          updated_by: SYSTEM
                          created_date: '2024-04-11T09:16:36.904Z'
                          updated_date: '2024-04-11T09:16:36.904Z'
                          version: 1
                      count: 2
                example-2:
                  summary: Dataset list success when status filter provided as string
                  value:
                    id: api.datasets.list
                    ver: v1
                    ts: '2024-04-19T12:56:13+05:30'
                    params:
                      status: SUCCESS
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 469ef16b-4211-4b71-b063-bbd81cc9df02
                    responseCode: OK
                    result:
                      data:
                        - id: master-telemetrry.1
                          dataset_id: master-telemetrry
                          name: master-telemetrry
                          type: master-dataset
                          extraction_config:
                            is_batch_event: false
                            extraction_key: ''
                            dedup_config:
                              drop_duplicates: false
                              dedup_key: ''
                              dedup_period: 604800
                          validation_config:
                            validate: true
                            mode: Strict
                          dedup_config:
                            drop_duplicates: false
                            dedup_key: ''
                            dedup_period: 604800
                          data_schema:
                            $schema: https://json-schema.org/draft/2020-12/schema
                            type: object
                            properties:
                              skill:
                                type: string
                                arrival_format: text
                                data_type: string
                              name:
                                type: string
                                arrival_format: text
                                data_type: string
                              skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                            additionalProperties: true
                          denorm_config:
                            redis_db_host: localhost
                            redis_db_port: 6379
                            denorm_fields: []
                          router_config:
                            topic: master-telemetrry
                          dataset_config:
                            data_key: skill
                            timestamp_key: ''
                            exclude_fields: []
                            entry_topic: local.masterdata.ingest
                            redis_db_host: localhost
                            redis_db_port: 6379
                            index_data: true
                            redis_db: 4
                          tags: []
                          status: Publish
                          version: 1
                          created_by: SYSTEM
                          updated_by: SYSTEM
                          published_date: '2024-04-11T03:46:36.938Z'
                          client_state:
                            metadata:
                              conflicts: {}
                              event:
                                mergedEvent:
                                  skill: new
                                  name: j
                                  skill_id: aabc
                                  Skill_id: bbc
                              activePage: 1
                            pages: {}
                          version_key: '1713509698978'
                          created_date: '2024-04-11T03:45:57.251Z'
                          updated_date: '2024-04-11T09:21:11.167Z'
                        - id: telemetry01.1
                          dataset_id: telemetry01
                          name: telemetry01
                          type: dataset
                          extraction_config:
                            is_batch_event: false
                            extraction_key: ''
                            dedup_config:
                              drop_duplicates: false
                              dedup_key: id
                              dedup_period: 604800
                          validation_config:
                            validate: true
                            mode: Strict
                            validation_mode: Strict
                          dedup_config:
                            drop_duplicates: false
                            dedup_key: ''
                            dedup_period: 604800
                          data_schema:
                            $schema: https://json-schema.org/draft/2020-12/schema
                            type: object
                            properties:
                              skill:
                                type: string
                                arrival_format: text
                                data_type: string
                              name:
                                type: string
                                arrival_format: text
                                data_type: string
                              skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                            additionalProperties: false
                          denorm_config:
                            redis_db_host: localhost
                            redis_db_port: 6379
                            denorm_fields: []
                          router_config:
                            topic: telemetry01
                          dataset_config:
                            data_key: ''
                            timestamp_key: obsrv_meta.syncts
                            exclude_fields: []
                            entry_topic: local.ingest
                            redis_db_host: localhost
                            redis_db_port: 6379
                            index_data: true
                            redis_db: 0
                          tags: []
                          status: Publish
                          version: 1
                          created_by: SYSTEM
                          updated_by: SYSTEM
                          published_date: '2024-04-11T00:57:37.581Z'
                          client_state:
                            metadata:
                              conflicts: {}
                              event:
                                mergedEvent:
                                  skill: old
                                  name: j
                                  skill_id: abc
                                  Skill_id: bbc
                              activePage: 3
                            pages: {}
                          version_key: '1713509698978'
                          created_date: '2024-04-11T00:54:06.404Z'
                          updated_date: '2024-04-11T06:28:24.526Z'
                      count: 2
                example-3:
                  summary: Dataset list success when type filter provided
                  value:
                    id: api.datasets.list
                    ver: v1
                    ts: '2024-04-19T12:57:28+05:30'
                    params:
                      status: SUCCESS
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 7d9aeb08-2952-485f-9944-4d118da7842e
                    responseCode: OK
                    result:
                      data:
                        - id: master-telemetrry.1
                          dataset_id: master-telemetrry
                          name: master-telemetrry
                          type: master-dataset
                          extraction_config:
                            is_batch_event: false
                            extraction_key: ''
                            dedup_config:
                              drop_duplicates: false
                              dedup_key: ''
                              dedup_period: 604800
                          validation_config:
                            validate: true
                            mode: Strict
                          dedup_config:
                            drop_duplicates: false
                            dedup_key: ''
                            dedup_period: 604800
                          data_schema:
                            $schema: https://json-schema.org/draft/2020-12/schema
                            type: object
                            properties:
                              skill:
                                type: string
                                arrival_format: text
                                data_type: string
                              name:
                                type: string
                                arrival_format: text
                                data_type: string
                              skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                            additionalProperties: true
                          denorm_config:
                            redis_db_host: localhost
                            redis_db_port: 6379
                            denorm_fields: []
                          router_config:
                            topic: master-telemetrry
                          dataset_config:
                            data_key: skill
                            timestamp_key: ''
                            exclude_fields: []
                            entry_topic: local.masterdata.ingest
                            redis_db_host: localhost
                            redis_db_port: 6379
                            index_data: true
                            redis_db: 4
                          tags: []
                          status: Publish
                          version: 1
                          created_by: SYSTEM
                          updated_by: SYSTEM
                          published_date: '2024-04-11T03:46:36.938Z'
                          client_state:
                            metadata:
                              conflicts: {}
                              event:
                                mergedEvent:
                                  skill: new
                                  name: j
                                  skill_id: aabc
                                  Skill_id: bbc
                              activePage: 1
                            pages: {}
                          version_key: '1713509698978'
                          created_date: '2024-04-11T03:45:57.251Z'
                          updated_date: '2024-04-11T09:21:11.167Z'
                      count: 1
                example-4:
                  summary: Dataset list success based on sortBy values
                  value:
                    id: api.datasets.list
                    ver: v1
                    ts: '2024-04-19T12:58:27+05:30'
                    params:
                      status: SUCCESS
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 270a4e50-f7e5-4562-ae75-7a967866d065
                    responseCode: OK
                    result:
                      data:
                        - id: master-telemetrry
                          dataset_id: master-telemetrry
                          type: master-dataset
                          name: master-telemetrry
                          validation_config:
                            validate: true
                            mode: Strict
                          extraction_config:
                            is_batch_event: false
                            extraction_key: ''
                            dedup_config:
                              drop_duplicates: false
                              dedup_key: ''
                              dedup_period: 604800
                          data_schema:
                            $schema: https://json-schema.org/draft/2020-12/schema
                            type: object
                            properties:
                              skill:
                                type: string
                                arrival_format: text
                                data_type: string
                              name:
                                type: string
                                arrival_format: text
                                data_type: string
                              skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                              Skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                            additionalProperties: true
                          denorm_config:
                            redis_db_host: localhost
                            redis_db_port: 6379
                            denorm_fields: []
                          router_config:
                            topic: master-telemetrry
                          dataset_config:
                            data_key: skill
                            timestamp_key: ''
                            exclude_fields: []
                            entry_topic: local.masterdata.ingest
                            redis_db_host: localhost
                            redis_db_port: 6379
                            index_data: true
                            redis_db: 4
                          tags: []
                          status: Live
                          created_by: SYSTEM
                          updated_by: SYSTEM
                          created_date: '2024-04-11T09:16:36.904Z'
                          updated_date: '2024-04-11T09:16:36.904Z'
                          version: 1
                        - id: master-telemetrry.1
                          dataset_id: master-telemetrry
                          name: master-telemetrry
                          type: master-dataset
                          extraction_config:
                            is_batch_event: false
                            extraction_key: ''
                            dedup_config:
                              drop_duplicates: false
                              dedup_key: ''
                              dedup_period: 604800
                          validation_config:
                            validate: true
                            mode: Strict
                          dedup_config:
                            drop_duplicates: false
                            dedup_key: ''
                            dedup_period: 604800
                          data_schema:
                            $schema: https://json-schema.org/draft/2020-12/schema
                            type: object
                            properties:
                              skill:
                                type: string
                                arrival_format: text
                                data_type: string
                              name:
                                type: string
                                arrival_format: text
                                data_type: string
                              skill_id:
                                type: string
                                arrival_format: text
                                data_type: string
                            additionalProperties: true
                          denorm_config:
                            redis_db_host: localhost
                            redis_db_port: 6379
                            denorm_fields: []
                          router_config:
                            topic: master-telemetrry
                          dataset_config:
                            data_key: skill
                            timestamp_key: ''
                            exclude_fields: []
                            entry_topic: local.masterdata.ingest
                            redis_db_host: localhost
                            redis_db_port: 6379
                            index_data: true
                            redis_db: 4
                          tags: []
                          status: Publish
                          version: 1
                          created_by: SYSTEM
                          updated_by: SYSTEM
                          published_date: '2024-04-11T03:46:36.938Z'
                          client_state:
                            metadata:
                              conflicts: {}
                              event:
                                mergedEvent:
                                  skill: new
                                  name: j
                                  skill_id: aabc
                                  Skill_id: bbc
                              activePage: 1
                            pages: {}
                          version_key: '1713509698978'
                          created_date: '2024-04-11T03:45:57.251Z'
                          updated_date: '2024-04-11T09:21:11.167Z'
                      count: 2
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
              example:
                id: api.datasets.list
                ver: v1
                ts: '2024-04-19T12:58:47+05:30'
                params:
                  status: FAILED
                  resmsgid: f9e1fae9-4660-409d-bb4d-e29888983d4b
                responseCode: BAD_REQUEST
                result: {}
                error:
                  code: DATASET_LIST_INPUT_INVALID
                  message: >-
                    #properties/params/additionalProperties should NOT have
                    additional properties
                  trace: ''
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
              example:
                id: api.datasets.list
                ver: v1
                ts: '2024-04-19T12:59:15+05:30'
                params:
                  status: FAILED
                  msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                  resmsgid: 81c3a4a5-e8ac-41de-be00-6d0300ecb106
                responseCode: INTERNAL_SERVER_ERROR
                result: {}
                error:
                  code: DATASET_LIST_FAILURE
                  message: Failed to list dataset
                  trace: ''
  /v1/data/in/{datasetId}:
      post:
        tags:
          - Data Ingest
        parameters:
        - required: true
          schema:
            title: datasetId
            type: string
          name: datasetId
          in: path
        summary: Data ingest
        description: >-
          This API allows you to ingest events to a data streaming platform in individual or batch format.
        requestBody:
          content:
            application/json:
              examples:
                example1:
                    summary: Ingest individual event
                    value:
                      id: api.data.in
                      ver: 1.0
                      ts: "1711966306164"
                      params:
                        msgid: "e180ecac-8f41-4f21-9a21-0b3a1a368917"
                      data:
                        eid: INTERACT
                        date: '2022-01-01'
                        ver: '3.0'
                        syncts: 1668591949682
                        ets: 1668591949682
                example2:
                    summary: Ingest batch event
                    value:
                      id: api.data.in
                      ver: 1.0
                      ts: "1711966306164"
                      params:
                        msgid: "e180ecac-8f41-4f21-9a21-0b3a1a368917"
                      data: [{ "eid": "INTERACT","date": "2022-01-01","ver": "3.0","syncts": 1668591949682}]
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                examples:
                  example-0:
                    summary: Data ingest successful(individual)
                    value:
                      id: api.data.in
                      ver: v1
                      ts: 1711966306164
                      params:
                        status: "SUCCESS"
                        msgid: "e180ecac-8f41-4f21-9a21-0b3a1a368917"
                        resmsgid: "ba6391e2-8c35-4c3f-8883-f503b4ffd6a5"
                      responseCode: OK
                      result:
                        message: Data ingested successfully
                  example-1:
                    summary: Data ingest successfully(batch)
                    value:
                      id: api.data.in
                      ver: v1
                      ts: 1711966352987
                      params:
                        status: "SUCCESS"
                        msgid: "e180ecac-8f41-4f21-9a21-0b3a1a368917"
                        resmsgid: "ba6391e2-8c35-4c3f-8883-f503b4ffd6a5"
                      responseCode: OK
                      result:
                        message: Data ingested successfully
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: object
                example:
                  id: api.data.in
                  ver: v1
                  ts: 1711966410766
                  params:
                    status: FAILED
                    resmsgid: 98020cf9-4239-4b6e-beea-c687d21fafa3
                  responseCode: BAD_REQUEST
                  result: {}
                  error:
                    code: DATA_INGESTION_INVALID_INPUT
                    message: "#required should have required property 'id'"
                    trace: ''
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  type: object
                examples:
                  example-0:
                    summary: Dataset not found
                    value:
                      id: api.data.in
                      ver: v1
                      ts: 1711966446364
                      params:
                        status: FAILED
                        msgid: e180ecac-8f41-4f21-9a21-0b3a1a368917
                        resmsgid: 98020cf9-4239-4b6e-beea-c687d21fafa3
                      responseCode: BAD_REQUEST
                      result: {}
                      error:
                        code: DATASET_NOT_FOUND
                        message: Dataset with id not found
                        trace: ''
                  example-1:
                    summary: Entry topic not found
                    value:
                      id: api.data.in
                      ver: v1
                      ts: 1711975482739
                      params:
                        status: FAILED
                        msgid: e180ecac-8f41-4f21-9a21-0b3a1a368917
                        resmsgid: 98020cf9-4239-4b6e-beea-c687d21fafa3
                      responseCode: BAD_REQUEST
                      result: {}
                      error:
                        code: ENTRY_TOPIC_NOT_FOUND
                        message: Entry topic is not defined
                        trace: ''
  /v1/data/query/{datasetId}:
      post:
        tags:
          - Data query
        summary: Data query
        parameters:
        - required: true
          schema:
            title: datasetId
            type: string
          name: datasetId
          in: path
        description: >-
          This API allows you to query your datasource.
        requestBody:
          content:
            application/json:
              examples:
                example1:
                    summary: SQL query
                    value:
                      id: api.data.out
                      ver: 1.0
                      ts: "1711966306164"
                      params:
                        msgid: "e180ecac-8f41-4f21-9a21-0b3a1a368917"
                      context:
                        datasetId: rollups-configured
                        table: day
                      query: >-
                        SELECT * FROM "rollups-configured" WHERE __time >= TIMESTAMP
                        '2020-12-31' AND __time < TIMESTAMP '2024-01-21' LIMIT 1
                example2:
                    summary: Native query
                    value:
                      id: api.data.out
                      ver: 1.0
                      ts: "1711966306164"
                      params:
                        mid: "e180ecac-8f41-4f21-9a21-0b3a1a368917"
                      context:
                        datasetId: rollups-configured
                        table: day
                      query:
                        quertType: scan
                        dataSource: rollups-configured
                        intervals:
                          type: intervals
                          intervals: ["2022-01-01/2022-02-01"]
                        granularity: day
                        columns: ["eid","__time"]
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                examples:
                  example-0:
                    summary: 'Success: sql query'
                    value:
                      id: api.data.out
                      ver: v1
                      ts: 1711971972855
                      params:
                        status: "SUCCESS"
                        msgid: "e180ecac-8f41-4f21-9a21-0b3a1a368917"
                        resmsgid: "ba6391e2-8c35-4c3f-8883-f503b4ffd6a5"
                      responseCode: OK
                      result:
                        - __time: '2022-01-01T00:00:00.000Z'
                          eid: '1'
                          ver: '3.0'
                          flags_ex_processed: 'true'
                          flags_pp_validation_processed: 'true'
                          flags_pp_duplicate_skipped: 'true'
                          flags_device_denorm: 'true'
                          flags_user_denorm: 'true'
                          flags_loc_denorm: 'true'
                          derivedlocationdata_district: AGRA
                          derivedlocationdata_from: user-profile
                          derivedlocationdata_state: Uttar Pradesh
                          mid: 6c3fc8c2-357d-489b-b0c9-afdde6e5c6c0
                          type: events
                          actor_type: User
                          actor_id: 311663b2-d7de-4d46-8803-20407eaa3403
                          edata_type: session
                          userdata_subject: null
                          userdata_district: AGRA
                          userdata_usersubtype: hm
                          userdata_grade: null
                          userdata_usersignintype: Self-Signed-In
                          userdata_usertype: administrator
                          userdata_userlogintype: administrator
                          userdata_state: Uttar Pradesh
                          devicedata_statecustomcode: '29'
                          devicedata_country: India
                          devicedata_iso3166statecode: IN-KA
                          devicedata_city: Bengaluru
                          devicedata_countrycode: IN
                          devicedata_state: Karnataka
                          devicedata_devicespec_idisk: '106.47'
                          devicedata_devicespec_webview: 107.0.5304.105
                          devicedata_devicespec_os: Android 12
                          devicedata_devicespec_scrn: '6.53'
                          devicedata_devicespec_sims: '-1'
                          devicedata_devicespec_cpu: "abi: arm64-v8a processor\t: 0 "
                          devicedata_devicespec_id: ac4ad4ac3feda0f2b17835b81e736c88c194dc89
                          devicedata_devicespec_camera: ''
                          devicedata_devicespec_edisk: '106.27'
                          devicedata_devicespec_make: vivo 1915
                          devicedata_statecode: KA
                          devicedata_districtcustom: BENGALURU URBAN SOUTH
                          devicedata_statecustomname: Karnataka
                          devicedata_userdeclared_district: AGRA
                          devicedata_userdeclared_state: Uttar Pradesh
                          context_cdata_id: a3c784f0-61d8-43e4-a92a-373fd4338c1d
                          context_cdata_type: UserSession
                          context_env: sdk
                          context_channel: '0126796199493140480'
                          context_pdata_id: preprod.diksha.app
                          context_pdata_pid: sunbird.app
                          context_pdata_ver: 4.10.1023preproduction
                          context_sid: a3c784f0-61d8-43e4-a92a-373fd4338c1d
                          context_did: ac4ad4ac3feda0f2b17835b81e736c88c194dc89
                          context_rollup_l1: '0126796199493140480'
                          object_id: ''
                          object_type: ''
                          object_version: ''
                          object_rollup: '{}'
                          count: 3
                          edata_duration_sum: null
                  example-1:
                    summary: 'Success: native query'
                    value:
                      id: api.data.out
                      ver: v1
                      ts: 1711973520793
                      params:
                        status: SUCCESS
                        errmsg: ''
                      responseCode: OK
                      result:
                        - timestamp: '2022-01-01T00:00:00.000Z'
                          result:
                            mid: 1
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: object
                examples:
                  example-0:
                    summary: 'Failure: invalid date range'
                    value:
                      id: api.data.out
                      ver: v1
                      ts: 1711972193426
                      params:
                        status: FAILED
                        errmsg: >-
                          Invalid date range! make sure your range cannot be more
                          than 30 days
                      responseCode: BAD_REQUEST
                      result: {}
                  example-1:
                    summary: 'Failure: Invalid date range (native)'
                    value:
                      id: api.data.out
                      ver: v1
                      ts: 1711972501847
                      params:
                        status: FAILED
                        errmsg: >-
                          Invalid date range! make sure your range cannot be more
                          than 30 days
                      responseCode: BAD_REQUEST
                      result: {}
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  type: object
                examples:
                  example-0:
                    summary: 'Failure: Datasource not found in druid'
                    value:
                      id: api.data.out
                      ver: v1
                      ts: 1711972085550
                      params:
                        status: FAILED
                        errmsg: >-
                          Datasource rollups-configured.1_rollup_week not
                          available for querying
                      responseCode: NOT_FOUND
                      result: {}
                  example-1:
                    summary: 'Failure: Datasource not found in live table'
                    value:
                      id: api.data.out
                      ver: v1
                      ts: 1711975034302
                      params:
                        status: FAILED
                        errmsg: Datasource undefined not found
                      responseCode: NOT_FOUND
                      result: {}
                  example-2:
                    summary: 'Failure: Datasource not found in live table (native)'
                    value:
                      id: api.data.out
                      ver: v1
                      ts: 1711974978635
                      params:
                        status: FAILED
                        errmsg: Datasource telemetry-eventssss not found
                      responseCode: NOT_FOUND
                      result: {}
                  example-3:
                    summary: 'Failure: Datasource not found in druid(native)'
                    value:
                      id: api.data.out
                      ver: v1
                      ts: 1711972569115
                      params:
                        status: FAILED
                        errmsg: >-
                          Datasource telemetry-events.1_rollup_day not available
                          for querying
                      responseCode: NOT_FOUND
                      result: {}
                      
  /v1/template/read/{templateId}:
    get:
      tags:
        - Query Templates
      summary: Read template
      parameters:
        - required: true
          schema:
            title: templateId
            type: string
          name: templateId
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: 'Success: JSON template'
                  value:
                    id: api.query.template.read
                    ver: v1
                    ts: '2024-04-30T12:09:55+05:30'
                    params:
                      status: SUCCESS
                      resmsgid: 8ef3a9d0-8658-47dd-b6cb-a4b1777a1ea4
                    responseCode: OK
                    result:
                      template_id: jsontemplate111
                      template_name: jsontemplate111
                      query: >-
                        {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                      query_type: json
                      created_by: SYSTEM
                      updated_by: SYSTEM
                      created_date: '2024-04-29T01:16:57.023Z'
                      updated_date: '2024-04-29T01:16:57.023Z'
                example-1:
                  summary: 'Success: SQL template'
                  value:
                    id: api.query.template.read
                    ver: v1
                    ts: '2024-04-30T12:10:54+05:30'
                    params:
                      status: SUCCESS
                      resmsgid: 656185ef-527d-4b60-ac19-263da85142b8
                    responseCode: OK
                    result:
                      template_id: sql1
                      template_name: sql1
                      query: >-
                        "SELECT * FROM {{DATASET}} WHERE __time BETWEEN
                        TIMESTAMP {{STARTDATE}} AND TIMESTAMP {{ENDDATE}}"
                      query_type: sql
                      created_by: SYSTEM
                      updated_by: SYSTEM
                      created_date: '2024-04-29T11:29:58.759Z'
                      updated_date: '2024-04-29T11:29:58.759Z'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
              example:
                id: api.query.template.read
                ver: v1
                ts: '2024-04-30T12:11:45+05:30'
                params:
                  status: FAILED
                  resmsgid: bc6a4621-4ac5-4959-b467-1134ea874960
                responseCode: NOT_FOUND
                result: {}
                error:
                  code: QUERY_TEMPLATE_NOT_EXISTS
                  message: Template sql100 does not exists
                  trace: ''
  /v1/template/create:
    post:
      tags:
        - Query Templates
      summary: Create query template
      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: query.template.create
                ver: v1
                ts: '2024-04-10T16:10:50+05:30'
                params:
                  msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                request:
                  template_name: json template
                  query_type: sql
                  query:
                    queryType: select
                    datasetId: '{{DATASET}}'
                    intervals: '{{STARTDATE}}/{{ENDDATE}}'
                    limit: '{{LIMITS}}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: 'Success : Create query template success (json)'
                  value:
                    id: api.query.template.create
                    ver: v1
                    ts: '2024-04-29T22:29:01+05:30'
                    params:
                      status: SUCCESS
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 71372ce0-16b9-4594-8db8-f12eff7e6a42
                    responseCode: OK
                    result:
                      template_id: json11template
                      template_name: json11template
                      message: The query template has been saved successfully
                example-1:
                  summary: 'Success: Create query template success (SQL)'
                  value:
                    id: api.query.template.create
                    ver: v1
                    ts: '2024-04-29T22:29:58+05:30'
                    params:
                      status: SUCCESS
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 62aa8c6d-c49c-41c2-9cc8-2f1b02bc2388
                    responseCode: OK
                    result:
                      template_id: sql1
                      template_name: sql1
                      message: The query template has been saved successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: 'Failure: Missing required variables'
                  value:
                    id: api.query.template.create
                    ver: v1
                    ts: '2024-04-29T22:35:10+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 62e18342-7e25-4122-8fca-6fb12fac3ff0
                    responseCode: BAD_REQUEST
                    result: {}
                    error:
                      code: QUERY_TEMPLATE_INVALID
                      message: >-
                        Invalid template provided, A template should consist of
                        variables undefined and type of json,sql
                      trace: ''
                example-1:
                  summary: 'Failure: Schema validation failure'
                  value:
                    id: api.query.template.create
                    ver: v1
                    ts: '2024-04-29T22:43:57+05:30'
                    params:
                      status: FAILED
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: d2b598b5-62c1-4c5d-b0b3-5d7d109a2bc2
                    responseCode: BAD_REQUEST
                    result: {}
                    error:
                      code: QUERY_TEMPLATE_INVALID_INPUT
                      message: >-
                        #properties/request/oneOf/0/properties/query_type/enum
                        should be equal to one of the allowed values
                      trace: ''
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
              example:
                id: api.query.template.create
                ver: v1
                ts: '2024-04-29T22:33:28+05:30'
                params:
                  status: FAILED
                  msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                  resmsgid: 18b6b123-4df5-4124-b6ec-73b667250e1c
                responseCode: CONFLICT
                result: {}
                error:
                  code: QUERY_TEMPLATE_ALREADY_EXISTS
                  message: Template josnaks-aaa already exists
                  trace: ''
  /v1/template/list:
    post:
      tags:
        - Query Templates
      summary: List templates
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: api.query.template.list
                ver: v1
                ts: '2024-04-10T16:10:50+05:30'
                params:
                  msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                request:
                  filters:
                    query_type: sql
                  sortBy:
                    - field: created_date
                      order: desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: empty request body
                  value:
                    id: api.query.template.list
                    ver: v1
                    ts: '2024-04-29T19:16:03+05:30'
                    params:
                      status: SUCCESS
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 5d41ee6e-2fc6-4353-b6c4-49e068f39b2f
                    responseCode: OK
                    result:
                      - template_id: josnaksaaa
                        template_name: JOSnaks--aaa
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:25:04.706Z'
                        updated_date: '2024-04-25T06:25:04.706Z'
                      - template_id: josnaks-aaa
                        template_name: JOSnaks--aaa
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:26:35.749Z'
                        updated_date: '2024-04-25T06:26:35.749Z'
                      - template_id: a
                        template_name: ' a'
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:30:50.179Z'
                        updated_date: '2024-04-25T06:30:50.179Z'
                      - template_id: yash-k
                        template_name: yash k
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:31:08.821Z'
                        updated_date: '2024-04-25T06:31:08.821Z'
                      - template_id: yashas-k
                        template_name: yashas  k
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:31:20.819Z'
                        updated_date: '2024-04-25T06:31:20.819Z'
                      - template_id: yashash-k
                        template_name: YASHASH  k
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:31:39.490Z'
                        updated_date: '2024-04-25T06:31:39.490Z'
                      - template_id: yashash-ak
                        template_name: YASHASH ak
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:33:56.501Z'
                        updated_date: '2024-04-25T06:33:56.501Z'
                      - template_id: test_template
                        template_name: test template
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-26T00:24:34.435Z'
                        updated_date: '2024-04-26T00:24:34.435Z'
                      - template_id: jsontemplate
                        template_name: jsontemplate
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-28T23:27:32.113Z'
                        updated_date: '2024-04-28T23:27:32.113Z'
                      - template_id: jsontemplate1
                        template_name: jsontemplate1
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-28T23:28:35.868Z'
                        updated_date: '2024-04-28T23:28:35.868Z'
                      - template_id: jsontemplate111
                        template_name: jsontemplate111
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:16:57.023Z'
                        updated_date: '2024-04-29T01:16:57.023Z'
                      - template_id: jso_template
                        template_name: jso template
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:19:42.458Z'
                        updated_date: '2024-04-29T01:19:42.458Z'
                      - template_id: json_1template
                        template_name: json 1template
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:22:19.689Z'
                        updated_date: '2024-04-29T01:22:19.689Z'
                      - template_id: sql_template
                        template_name: sql template
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:24:03.511Z'
                        updated_date: '2024-04-29T01:24:03.511Z'
                      - template_id: sql1template
                        template_name: sql1template
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:26:28.381Z'
                        updated_date: '2024-04-29T01:26:28.381Z'
                      - template_id: sql11template
                        template_name: sql11template
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:30:59.381Z'
                        updated_date: '2024-04-29T01:30:59.381Z'
                      - template_id: sql11template1
                        template_name: sql11template1
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:31:53.976Z'
                        updated_date: '2024-04-29T01:31:53.976Z'
                      - template_id: sql_template_1
                        template_name: sql template 1
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:36:01.592Z'
                        updated_date: '2024-04-29T01:36:01.592Z'
                      - template_id: sql_template_11
                        template_name: sql template 11
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:39:29.968Z'
                        updated_date: '2024-04-29T01:39:29.968Z'
                example-1:
                  summary: 'Success : order by'
                  value:
                    id: api.query.template.list
                    ver: v1
                    ts: '2024-04-30T11:36:09+05:30'
                    params:
                      status: SUCCESS
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 4393ac57-d441-4be8-b22b-9e4328cab887
                    responseCode: OK
                    result:
                      - template_id: sql11template
                        template_name: sql11template
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-21T01:30:59.381Z'
                        updated_date: '2024-04-21T01:30:59.381Z'
                      - template_id: sql11template1
                        template_name: sql11template1
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-22T01:31:53.976Z'
                        updated_date: '2024-04-22T01:31:53.976Z'
                      - template_id: josnaksaaa
                        template_name: JOSnaks--aaa
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:25:04.706Z'
                        updated_date: '2024-04-25T06:25:04.706Z'
                      - template_id: josnaks-aaa
                        template_name: JOSnaks--aaa
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:26:35.749Z'
                        updated_date: '2024-04-25T06:26:35.749Z'
                      - template_id: a
                        template_name: ' a'
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:30:50.179Z'
                        updated_date: '2024-04-25T06:30:50.179Z'
                      - template_id: yash-k
                        template_name: yash k
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:31:08.821Z'
                        updated_date: '2024-04-25T06:31:08.821Z'
                      - template_id: yashas-k
                        template_name: yashas  k
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:31:20.819Z'
                        updated_date: '2024-04-25T06:31:20.819Z'
                      - template_id: yashash-k
                        template_name: YASHASH  k
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:31:39.490Z'
                        updated_date: '2024-04-25T06:31:39.490Z'
                      - template_id: yashash-ak
                        template_name: YASHASH ak
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:33:56.501Z'
                        updated_date: '2024-04-25T06:33:56.501Z'
                      - template_id: test_template
                        template_name: test template
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-26T00:24:34.435Z'
                        updated_date: '2024-04-26T00:24:34.435Z'
                      - template_id: jsontemplate
                        template_name: jsontemplate
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-28T23:27:32.113Z'
                        updated_date: '2024-04-28T23:27:32.113Z'
                      - template_id: jsontemplate1
                        template_name: jsontemplate1
                        query: >-
                          {"queryType":"timeseries","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","aggregations":[{"type":"filtered","aggregator":{"type":"count","name":"a0"},"filter":{"type":"not","field":{"type":"null","column":"school_id"}},"name":"school_id"}]}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-28T23:28:35.868Z'
                        updated_date: '2024-04-28T23:28:35.868Z'
                      - template_id: jsontemplate111
                        template_name: jsontemplate111
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:16:57.023Z'
                        updated_date: '2024-04-29T01:16:57.023Z'
                      - template_id: jso_template
                        template_name: jso template
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:19:42.458Z'
                        updated_date: '2024-04-29T01:19:42.458Z'
                      - template_id: json_1template
                        template_name: json 1template
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:22:19.689Z'
                        updated_date: '2024-04-29T01:22:19.689Z'
                      - template_id: sql_template
                        template_name: sql template
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:24:03.511Z'
                        updated_date: '2024-04-29T01:24:03.511Z'
                      - template_id: sql1template
                        template_name: sql1template
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:26:28.381Z'
                        updated_date: '2024-04-29T01:26:28.381Z'
                      - template_id: sql_template_1
                        template_name: sql template 1
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:36:01.592Z'
                        updated_date: '2024-04-29T01:36:01.592Z'
                      - template_id: sql_template_11
                        template_name: sql template 11
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:39:29.968Z'
                        updated_date: '2024-04-29T01:39:29.968Z'
                      - template_id: json11template
                        template_name: json11template
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T11:29:01.096Z'
                        updated_date: '2024-04-29T11:29:01.096Z'
                      - template_id: sql1
                        template_name: sql1
                        query: >-
                          "SELECT * FROM {{DATASET}} WHERE __time BETWEEN
                          TIMESTAMP {{STARTDATE}} AND TIMESTAMP {{ENDDATE}}"
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T11:29:58.759Z'
                        updated_date: '2024-04-29T11:29:58.759Z'
                example-2:
                  summary: 'Success : Filters'
                  value:
                    id: api.query.template.list
                    ver: v1
                    ts: '2024-04-30T11:38:55+05:30'
                    params:
                      status: SUCCESS
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: 69da1ef2-c2c5-4f22-bb68-abdf823f0744
                    responseCode: OK
                    result:
                      - template_id: sql_template
                        template_name: sql template
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:24:03.511Z'
                        updated_date: '2024-04-29T01:24:03.511Z'
                      - template_id: sql1template
                        template_name: sql1template
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:26:28.381Z'
                        updated_date: '2024-04-29T01:26:28.381Z'
                      - template_id: sql_template_1
                        template_name: sql template 1
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:36:01.592Z'
                        updated_date: '2024-04-29T01:36:01.592Z'
                      - template_id: sql_template_11
                        template_name: sql template 11
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T01:39:29.968Z'
                        updated_date: '2024-04-29T01:39:29.968Z'
                      - template_id: sql11template
                        template_name: sql11template
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-21T01:30:59.381Z'
                        updated_date: '2024-04-21T01:30:59.381Z'
                      - template_id: sql11template1
                        template_name: sql11template1
                        query: >-
                          "SELECT COUNT(*) FROM \"{{DATASET}}\" WHERE \"__time\"
                          BETWEEN TIMESTAMP \"{{STARTDATE}}\" AND TIMESTAMP
                          \"{{ENDDATE}}\""
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-22T01:31:53.976Z'
                        updated_date: '2024-04-22T01:31:53.976Z'
                      - template_id: sql1
                        template_name: sql1
                        query: >-
                          "SELECT * FROM {{DATASET}} WHERE __time BETWEEN
                          TIMESTAMP {{STARTDATE}} AND TIMESTAMP {{ENDDATE}}"
                        query_type: sql
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-29T11:29:58.759Z'
                        updated_date: '2024-04-29T11:29:58.759Z'
                example-3:
                  summary: 'Success : limit and offset'
                  value:
                    id: api.query.template.list
                    ver: v1
                    ts: '2024-04-30T11:41:36+05:30'
                    params:
                      status: SUCCESS
                      msgid: 4a7f14c3-d61e-4d4f-be78-181834eeff6d
                      resmsgid: d1aa35c3-e817-4e2e-85f5-dfd346122192
                    responseCode: OK
                    result:
                      - template_id: josnaksaaa
                        template_name: JOSnaks--aaa
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:25:04.706Z'
                        updated_date: '2024-04-25T06:25:04.706Z'
                      - template_id: josnaks-aaa
                        template_name: JOSnaks--aaa
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:26:35.749Z'
                        updated_date: '2024-04-25T06:26:35.749Z'
                      - template_id: a
                        template_name: ' a'
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:30:50.179Z'
                        updated_date: '2024-04-25T06:30:50.179Z'
                      - template_id: yash-k
                        template_name: yash k
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:31:08.821Z'
                        updated_date: '2024-04-25T06:31:08.821Z'
                      - template_id: yashas-k
                        template_name: yashas  k
                        query: >-
                          {"queryType":"select","datasetId":"{{DATASET}}","intervals":"{{STARTDATE}}/{{ENDDATE}}","limit":"{{LIMITS}}"}
                        query_type: json
                        created_by: SYSTEM
                        updated_by: SYSTEM
                        created_date: '2024-04-25T06:31:20.819Z'
                        updated_date: '2024-04-25T06:31:20.819Z'
  /v1/template/delete/{templateId}:
    delete:
      tags:
        - Query Templates
      summary: Delete template
      parameters:
      - required: true
        schema:
          title: templateId
          type: string
        name: templateId
        in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                id: api.query.template.delete
                ver: v1
                ts: '2024-04-30T11:58:27+05:30'
                params:
                  status: SUCCESS
                  resmsgid: 3e2859df-f494-4c47-ae64-e2c34f4ef1cb
                responseCode: OK
                result:
                  message: Template yashash-k deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
              example:
                id: api.query.template.delete
                ver: v1
                ts: '2024-04-29T18:29:09+05:30'
                params:
                  status: FAILED
                  resmsgid: 6c62ff4d-0a63-4384-a365-7bbef951f288
                responseCode: NOT_FOUND
                result: {}
                error:
                  code: QUERY_TEMPLATE_NOT_EXISTS
                  message: Template json_template does not exists
                  trace: ''