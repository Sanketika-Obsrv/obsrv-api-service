
# name: Obsrv api service build and deploy workflow
# run-name: Workflow run for ${{ github.ref }}
# on:
#   push:
#     tags:
#       - '*'
  

# jobs:
#   check-tag:
#     runs-on: ubuntu-latest
#     outputs:
#       ALLOWED_TAG: ${{ steps.tag-checker.outputs.TRIGGER_ALLOWED }}
#     steps:
#       - name: Check if tag is one in list of current releases
#         id: tag-checker
#         run: |
#           (echo -n TRIGGER_ALLOWED= && echo 'print("${{ github.ref_name }}".split("_")[0] in "${{ vars.CURRENT_RELEASE }}")' | python3) >> "$GITHUB_OUTPUT"
#     strategy:
#       matrix:
#         service: ['./api-service', './command-service']
#         dockerfile: ['Dockerfile', 'Dockerfile']
#      needs: check-tag  
#      if: needs.check-tag.outputs.ALLOWED_TAG ==  'True' 
#      runs-on: ubuntu-latest
#      steps:
#       - name: Checkout code
#         uses: actions/checkout@v2s

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v2
#         with:
#           context: ./${{ matrix.service }}
#           dockerfile: ./${{ matrix.service }}/${{ matrix.dockerfile }}
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/obsrv-${{ matrix.service }}:${{ github.ref_name }}
#           push: true
name: Obsrv api service build and deploy workflow
run-name: Workflow run for ${{ github.ref }}
on:
  push:
    tags:
      - '*'
  

jobs:
  check-tag:
    runs-on: ubuntu-latest
    outputs:
      ALLOWED_TAG: ${{ steps.tag-checker.outputs.TRIGGER_ALLOWED }}
    steps:
      - name: Check if tag is one in list of current releases
        id: tag-checker
        run: |
          (echo -n TRIGGER_ALLOWED= && echo 'print("${{ github.ref_name }}".split("_")[0] in "${{ vars.CURRENT_RELEASE }}")' | python3) >> "$GITHUB_OUTPUT"
      
  docker-build:
    needs: check-tag
    if: needs.check-tag.outputs.ALLOWED_TAG == 'True'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - service: api-service  
          - service: command-service 
          - dockerfile: ./api-service/Dockerfile
          - dockerfile: ./command-service/Dockerfile
    
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}obsrv-${{ matrix.service}}:${{ github.ref_name }}

          push: true
