


      
      

name: Obsrv api service build and deploy workflow
run-name: Workflow run for ${{ github.ref }}
on:
  push:
    tags:
      - '*'

jobs:
  check-tag:
    runs-on: ubuntu-latest
    outputs:
      ALLOWED_TAG: ${{ steps.tag-checker.outputs.TRIGGER_ALLOWED }}
    steps:
      - name: Check if tag is one in list of current releases
        id: tag-checker
        run: |
          (echo -n TRIGGER_ALLOWED= && echo 'print("${{ github.ref_name }}".split("_")[0] in "${{ vars.CURRENT_RELEASE }}")' | python3) >> "$GITHUB_OUTPUT"
  docker-build-api-service:
    needs: check-tag
    if: needs.check-tag.outputs.ALLOWED_TAG ==  'True'
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker image and push
        uses: docker/build-push-action@v2
        with:
          file: ./api-service/Dockerfile  # Corrected context path
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/obsrv-api-service:${{ github.ref_name }}

  docker-build-command-service:
    needs: check-tag
    if: needs.check-tag.outputs.ALLOWED_TAG ==  'True'
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker image and push
        uses: docker/build-push-action@v2
        with:
          file: ./command-service/Dockerfile  # Corrected context path
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/obsrv-command-service:${{ github.ref_name }}

        



