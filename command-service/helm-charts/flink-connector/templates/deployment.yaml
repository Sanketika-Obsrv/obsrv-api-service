{{- $currentScope := .}}
{{- range $jobName, $jobData := .Values.flink_jobs }}
{{- if $jobData.enabled }}
{{- with $currentScope }}
{{ $component := "taskmanager" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" $jobName $component }}
  namespace: {{ include "base.namespace" $ }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  annotations:
    checksum/config: {{ .Files.Glob "configs/*" | toYaml | sha256sum }}
    checksum/job-config: {{ $jobData | toYaml | sha256sum }}
  {{- if .Values.commonAnnotations }}
    {{ include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.names.name" . }}
      app.kubernetes.io/component: {{ printf "%s-%s" $jobName $component }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "common.names.name" . }}
        app.kubernetes.io/component: {{ printf "%s-%s" $jobName $component }}
        component: {{ printf "%s-%s" $jobName $component }}
      annotations:
        checksum/config: {{ .Files.Glob "configs/*" | toYaml | sha256sum }}
        checksum/job-config: {{ $jobData | toYaml | sha256sum }}
    spec:
      {{- if .Values.serviceAccount.create}}
      serviceAccountName: {{ include "base.serviceaccountname" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- $imagePullSecrets := default .Values.imagePullSecrets $jobData.imagePullSecrets }}
      {{- with $imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $jobName }}-taskmanager
          image: {{ include "base.image.flink" (dict "context" $ "scope"  $jobData) }}
          imagePullPolicy: {{ default .Values.imagePullPolicy "Always" }}
          workingDir: {{ .Values.taskmanager.flink_work_dir }}
          args: ["taskmanager"]
          env:
            - name: FLINK_PROPERTIES
              value: |+
                jobmanager.rpc.address: {{ $jobName }}-jobmanager
                taskmanager.rpc.port=6122
                taskmanager.numberOfTaskSlots: 2
                metrics.reporters: prom
                metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
                metrics.reporter.prom.host: {{ $jobName }}-taskmanager
                metrics.reporter.prom.port: 9251
          ports:
          - containerPort: {{ .Values.taskmanager.rpc_port }}
            name: rpc
          {{- toYaml (index .Values.flink_resources $component )| nindent 10 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
          - name: flink-config-volume
            mountPath: /data/flink/conf/flink-connector.conf
            subPath: flink-connector.conf
          # - name: flink-config-volume
          #   mountPath: /opt/flink/conf/flink-conf.yaml
          #   subPath: flink-conf.yaml
          - name: flink-common-volume
            mountPath: /opt/flink/conf/log4j-console.properties
            subPath: log4j-console.properties
      volumes:
      - name: flink-config-volume
        configMap:
          name: flink-connector-conf
          items:
          - key: connectors-scala-config.conf
            path: flink-connector.conf
      - name: flink-common-volume
        configMap:
          name: {{ $jobName }}-config
          items:
          # - key: flink-conf
          #   path: flink-conf.yaml
          - key: log4j_console_properties
            path: log4j-console.properties
{{ $component := "jobmanager" }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ printf "%s-%s" $jobName $component }}
  namespace: {{ include "base.namespace" . }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  annotations:
    checksum/config: {{ .Files.Glob "configs/*" | toYaml | sha256sum }}
    checksum/job-config: {{ $jobData | toYaml | sha256sum }}
  {{- if .Values.commonAnnotations }}
  {{ include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.names.name" . }}
      app.kubernetes.io/component: {{ printf "%s-%s" $jobName $component }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "common.names.name" . }}
        app.kubernetes.io/component: {{ printf "%s-%s" $jobName $component }}
        component: {{ printf "%s-%s" $jobName $component }}
      annotations:
        checksum/config: {{ .Files.Glob "cFonfigs/*" | toYaml | sha256sum }}
        checksum/job-config: {{ $jobData | toYaml | sha256sum }}
    spec:
      serviceAccountName: {{ include "base.serviceaccountname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- $imagePullSecrets := default .Values.imagePullSecrets $jobData.imagePullSecrets }}
      {{- with $imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $jobName }}-jobmanager
          image: {{ include "base.image.flink" (dict "context" $ "scope"  $jobData) }}
          imagePullPolicy: {{ default .Values.imagePullPolicy "Always" }}
          workingDir: /opt/flink
          # command: ["/bin/sh", "-c"]
          args: ["jobmanager"]
          env:
            - name: FLINK_PROPERTIES
              value: |+
                jobmanager.rpc.address: {{ $jobName }}-jobmanager
                jobmanager.rpc.port=6123
                metrics.reporters: prom
                metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
                metrics.reporter.prom.host: {{ $jobName }}-jobmanager
                metrics.reporter.prom.port: 9250
          
          volumeMounts:
          - name: flink-config-volume
            mountPath: /data/flink/conf/flink-connector.conf
            subPath: flink-connector.conf
          - name: data
            mountPath: /flink/connectors
          - name: flink-common-volume
            mountPath: /opt/flink/conf/log4j-console.properties
            subPath: log4j-console.properties
  
        - name: {{ $jobName }}-job-submit
          image: {{ include "base.image.flink" (dict "context" $ "scope"  $jobData) }}
          imagePullPolicy: {{ default .Values.imagePullPolicy "Always" }}
          workingDir: /opt/flink
          command:
          - /bin/bash
          - -c
          - |
            /usr/bin/python3.11 /data/flink/connectors/connectors-init/connector.py;
            sleep 30s;
            /opt/flink/bin/flink run -m \
              {{ $jobName }}-jobmanager.{{ include "base.namespace" . }}.svc.cluster.local:8081 \
              /flink/connectors/{{ $jobName }}-1.0.0/{{ $jobName }}-1.0.0.jar \
              --config.file.path /data/flink/conf/flink-connector.conf \
          {{- if eq .Values.checkpoint_store_type "azure" }}
              "-Dfs.azure.account.key.{{ .Values.global.azure_storage_account_name }}.blob.core.windows.net={{ .Values.global.azure_storage_account_key }}" \
          {{- end }}
          {{- if and (eq .Values.checkpoint_store_type "s3") (ne .Values.s3_auth_type "serviceAccount") }}
              "-Ds3.access-key={{ .Values.s3_access_key }}" \
              "-Ds3.secret-key={{ .Values.s3_secret_key }}" \
              "-Ds3.endpoint={{ .Values.s3_endpoint }}" \
              "-Ds3.path.style.access={{ .Values.s3_path_style_access }}" \
          {{- end }}
          {{- if eq .Values.checkpoint_store_type "gcs" }}
              "-Dgoogle.cloud.auth.service.account.enable=true" \
          {{- end }}
            ;
          ports:
            {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
            {{- end }}
          {{-  toYaml (index .Values.flink_resources $component )| nindent 10 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
          - name: flink-config-volume
            mountPath: /data/flink/conf/flink-connector.conf
            subPath: flink-connector.conf
          - name: data
            mountPath: /flink/connectors
          - name: flink-common-volume
            mountPath: /opt/flink/conf/log4j-console.properties
            subPath: log4j-console.properties


      volumes:
      - name: flink-config-volume
        configMap:
          name: flink-connector-conf
          items:
          - key: connectors-scala-config.conf
            path: flink-connector.conf
      - name: flink-common-volume
        configMap:
          name: {{ $jobName }}-config
          items:
          # - key: flink-conf
          #   path: flink-conf.yaml
          - key: log4j_console_properties
            path: log4j-console.properties

  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
      storageClassName: "standard"

{{- end }}
{{- end}}
{{- end}}