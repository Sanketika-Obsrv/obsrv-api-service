apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}
  namespace: {{ include "base.namespace" . }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/dataset: {{ .Values.dataset_id }}
    app.kubernetes.io/connector: {{ .Values.connector_id }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  concurrencyPolicy: Forbid
  schedule: {{ .Values.cronSchedule }}
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            {{- if .Values.podAnnotations }}
            {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 12 }}
            {{- end }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 12 }}
            app.kubernetes.io/dataset: {{ .Values.dataset_id }}
            app.kubernetes.io/connector: {{ .Values.connector_id }}
        spec:
          serviceAccountName: {{ .Values.serviceAccount.name }}
          restartPolicy: {{ .Values.restartPolicy }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.initContainers }}
          initContainers:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          containers:
            - name: {{ .Chart.Name }}
              image: "{{- include "base.image" .}}"
              imagePullPolicy: {{ .Values.imagePullPolicy }}
              {{- if .Values.livenessProbe }}
              livenessProbe:
                {{- toYaml .Values.livenessProbe | nindent 16 }}
              {{- end }}
              {{- if .Values.readinessProbe }}
              readinessProbe:
                {{- toYaml .Values.readinessProbe | nindent 16 }}
              {{- end }}
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              {{- if .Values.configmap.enabled }}
              envFrom:
              - configMapRef:
                  name: {{ include "common.names.fullname" . }}-env
              volumeMounts:
              - name: config
                mountPath: {{ .Values.configmap.mountPath }}
              {{- end }}
              command:
              {{- if eq .Values.technology "scala" }}
              - /bin/sh
              - -c
              - |+
                # Wait for the Spark pod to be ready
                SPARK_POD=$(kubectl get pods -l app.kubernetes.io/name=spark,app.kubernetes.io/component=master -o jsonpath='{.items[0].metadata.name}')
                kubectl exec -it $SPARK_POD -- bash -c "/opt/bitnami/spark/bin/spark-submit --master={{ .Values.spark.master.host }} --jars /data/connectors/{{ .Values.connector_source }}/libs/\*.jar --class {{ .Values.main_class }} /data/connectors/{{ .Values.connector_source }}/{{ .Values.main_file }} -f /data/conf/connectors-scala-config.conf -c {{ .Values.instance_id }}"
              {{- else if eq .Values.technology "python" }}
              - /bin/sh
              - -c
              - |
                # Wait for the Spark pod to be ready
                SPARK_POD=$(kubectl get pods -l app.kubernetes.io/name=spark,app.kubernetes.io/component=master -o jsonpath='{.items[0].metadata.name}')
                kubectl exec -it $SPARK_POD -- bash -c "/opt/bitnami/spark/bin/spark-submit --master={{ .Values.spark.master.host }} --conf spark.pyspark.driver.python={{ .Values.python_path }} --conf spark.pyspark.python={{ .Values.python_path }} --jars /data/connectors/{{ .Values.connector_source }}/libs/\* /data/connectors/{{ .Values.connector_source }}/{{ .Values.main_file }} -f /data/conf/connectors-python-config.yaml -c {{ .Values.instance_id }}"
              {{- end }}
              {{- with .Values.sidecars }}
              {{- toYaml . | nindent 12 }}
              {{- end }}
          {{- if .Values.configmap.enabled }}
          volumes:
          - name: config
            configMap:
              name: {{ include "common.names.fullname" . }}
          {{- end }}
